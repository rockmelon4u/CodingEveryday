gradle이란

https://okky.tistory.com/179

Java에서 비교적 일찍부터 "빌드 도구"에 의한 프로젝트 관리가 보급되어 있었다. Apache Ant라는 빌드 도구가 등장한 것은 2000년이다. 그 후에 더욱 강력해진 Apache Maven이 등장하고, 이 것이 현시점에서도 "Java 빌드 도구의 사실상의 표준"이라고 할 수 있다.

이러한 툴에서 "이것이 거의 표준"이라고 정착하면, 그렇게 간단히 바뀌는 것은 아니지만 빌드 도구의 세계에서 그 예외적인 사건이 일어나고 있다. 이 Maven의 아성을 무너뜨리고 있는 강력한 라이벌이 "Gradle"이라는 소프트웨어이다.
Gradle은 Groovy라는 언어를 기반으로 만들어진 빌드 도구이다. Java 가상 머신에서 실행되는 스크립트 언어이다. Java와 마찬가지로 소스 코드를 작성하고 Java가상 머신에서 동작하지만, Java와 달리 소스 코드를 컴파일을 할 필요는 없다. Groovy는 스크립트 언어이며, 소스 코드를 그대로 실행한다. 또한 Java와 호환되고, Java 클래스 파일을 그대로 Groovy클래스로 사용할 수 있다 .문법도 Java에 아주 가까워, Java를 보다 사용하기 쉽게 한 것으로 느낄 수 있다. 어떤 사람들은 Groovy는 Java의 방언 중 하나라고 생각하는 사람도 있을 정도이다.
이 "간편하게 사용할 수 있는 Java"라고 할 수 있는 Groovy를 사용하여 빌드 처리를 작성하고, 실행하는 것이 Gradle이다. 

그래서 결론적으로 Maven vs Gradle 이렇게 Maven과 Gradle 비교를 해보자면
현재로서는 분명히 maven의 점유율이 더 높고 더 익숙하신 분들이 많은 상황이지만
gradle 의 추격이 더 빨라지고 있어서 조만간 상황이 역전될 가능성이 더 높다고 하는 사람들이 많아지고 있으며
그래들이 조금더 빠른 성능과 간결한 설정의 매력을 보유하고 있어 인기도가 상승중이라고 합니다.
소규모의 프로젝트에서는 큰 차이가 없어서 익숙한 maven 을 사용해도 무방할지라도
규모가 커질수록 gradle 을 사용하는 것이 체감상 더욱 유리하다고 합니다.
저도 그래서 Spring boot 튜토리얼을 진행할때는 그레이들을 설치하여 연습해보려고 하니 또 포스팅 하겠습니다.
아래는 간단 비교 포스팅 스크랩이니 참고하시길 바라며 이만
gradle 의 빌드 스크립트는 groovy 라는 언어로 작성해야 하므로 maven 의 xml 에 비하면 친숙하진 않지만 확장성이 뛰어나다.
maven 은 프로젝트가 커질수록 빌드 스크립트의 내용이 길어지고 가독성이 떨어지는 반면, gradle 은 훨씬 적은 양의 스크립트로 짧고 간결하게 작성할 수 있다.
maven 의 경우 멀티 프로젝트에서 특정 설정을 다른 모듈에서 사용하려면 상속을 받아야 하지만 gradle 은 설정 주입 방식으로 이를 해결한다.
그래서 gradle 은 멀티 프로젝트에 매우 적합하며, 빌드 속도는 다양한 시나리오 상에서 10~100배 가량이 빠르다.


https://madplay.github.io/post/what-is-gradle
그루비(Grrovy)를 기반으로 한 빌드 자동화, 개발 지원에 중점을 둔 빌드 도구.

그래들(Gradle)은 그루비를 기반으로 한 빌드 도구이다. 
Ant와 Maven과 같은 이전 세대 빌드 도구의 단점을 보완, 장점을 취합하여 만든 오픈소스로 공개된 빌드 도구.


https://velog.io/@hwany/gradle
프로젝트를 위한 범용 빌드 도구

gradle wrapper(Gradle기반 프로젝트의 구조와 Gradle설치 없이 빌드를 할 수 있도록 해주는 것)
이미 존재하는 프로젝트를 새로운 환경에 설치할때 별도의 설치나 설정과정없이 빌드할 수 있게 하기 위함
(Java나 Gradle도 설치할 필요가 없음. 또한 로컬에 설치된 Gradle 또는 Java의 버전도 신경쓸 필요가 없음. 따라서 항상 wrapper를 사용할 것을 권장)


https://ko.wikipedia.org/wiki/Gradlehttps://willbesoon.tistory.com/93
그루비를 이용한 빌드 자동화 시스템이다. Groovy와 유사한 도메인 언어를 채용하였으며, 현재 안드로이드 앱을 만드는데 필요한 안드로이드 스튜디오의 공식 빌드 시스템이기도 하다. Java, C/C++, 파이썬 과 같은 여러가지 언어를 지원한다.

자바 프로젝트의 예
메이븐 디렉터리 구조가 자바 소스와 리소스에 사용된다고 가정하자. 
이 디렉터리들은 src/main/java, src/main/resources, src/test/java, src/test/resources이다.

빌드 도구란?
https://galid1.tistory.com/194
	* 
소스코드를 컴파일, 테스트, 정적분석 등을 실시하여 실행 가능한 애플리케이션으로 자동 생성하는 프로그램
	* 
계속해서 늘어나는 라이브러리 자동 추가 및 관리
	* 
프로젝트를 진행하며 시간이 지남이 따라 라이브러리의 버전을 자동으로 동기화


배경
	* 
웹, 앱 프로그래밍 개발이 발전하며 어플이 개발함에 있어 필요한 라이브러리도 많아지게 되었다. 이 많은 라이브러리를 직접 다운받아서 추가하여 사용하는 방법도 있지만, 번거로움이 따라, 이때문에 만들어진것이 빌드 도구라 하겠다.


종류
	* 
Ant
	* 
Maven
	* 
Gradle









